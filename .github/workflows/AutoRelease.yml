name: CI Builder

on: 
  push: { branches: [main] } 

env:
  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
  GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}

jobs:
  
  buildWindows:
    name: Build for Windows 🖥️
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-StandaloneWindows64
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: StandaloneWindows64
          buildMethod: UnityBuilderAction.BuildScript.Build
          projectPath: BS23 Messenger

      - uses: actions/upload-artifact@v2
        with:
          path: build

  buildAndroid:
    name: Build for Android 📱
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-Android
          restore-keys: |
            Library-build-
            Library-

      - uses: game-ci/unity-builder@v2
        with:
          targetPlatform: Android
          buildMethod: UnityBuilderAction.BuildScript.Build
          projectPath: BS23 Messenger

      - uses: actions/upload-artifact@v2
        with:
          path: build


  deployPages:
    needs: [buildWindows,buildAndroid]
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
     
      - name: Compress
        uses: montudor/action-zip@v0.1.1
        with:
          args: zip -qq -r ./artifact/StandaloneWindows64.zip ./artifact/StandaloneWindows64

      - name: Display structure of downloaded files
        run: ls -R
        
      - name: Release
        uses: ridedott/release-me-action@master
        with:
          release-branches: '["main"]'
          release-assets: |
            ./artifact/Android/Android.apk
            ./artifact/StandaloneWindows64.zip
      
      - name: Discord Notification
        uses: fateyan/action-discord-notifier@v1
        with:
          message-title: New Release available at https://github.com/Studio-23-xyz/Messenger-23/releases
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
